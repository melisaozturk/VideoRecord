//
//  ViewController.swift
//  CaptureVideo
//
//  Created by melisa öztürk on 9.05.2020.
//  Copyright © 2020 melisa öztürk. All rights reserved.
//

import UIKit
import Photos

class ViewController: UIViewController {
    
    @IBOutlet fileprivate var captureButton: UIButton!
    //Displays a preview of the video output generated by the device's cameras.
    @IBOutlet fileprivate var capturePreviewView: UIView!
    
    //Allows the user to put the camera in photo mode.
//    @IBOutlet fileprivate var photoModeButton: UIButton!
//    @IBOutlet fileprivate var toggleCameraButton: UIButton!
//    @IBOutlet fileprivate var toggleFlashButton: UIButton!
    
    //Allows the user to put the camera in video mode.
//    @IBOutlet fileprivate var videoModeButton: UIButton!
    
    let streamController = StreamController()
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        styleCaptureButton()
    }
    
    override var prefersStatusBarHidden: Bool {
        return true
    }
    
    @IBAction func toggleFlash(_ sender: UIButton) {
//        if streamController.flashMode == .on {
//            streamController.flashMode = .off
////            toggleFlashButton.setImage(#imageLiteral(resourceName: "Flash Off Icon"), for: .normal)
//        }
//
//        else {
//            streamController.flashMode = .on
////            toggleFlashButton.setImage(#imageLiteral(resourceName: "Flash On Icon"), for: .normal)
//        }
    }
    
    @IBAction func switchCameras(_ sender: UIButton) {
        do {
            try streamController.switchCameras()
        }
     
        catch {
            print(error)
        }
     
//        switch cameraController.currentCameraPosition {
//        case .some(.front):
//            toggleCameraButton.setImage(#imageLiteral(resourceName: "Front Camera Icon"), for: .normal)
//
//        case .some(.rear):
//            toggleCameraButton.setImage(#imageLiteral(resourceName: "Rear Camera Icon"), for: .normal)
//
//        case .none:
//            return
//        }
    }
    
    @IBAction func captureImage(_ sender: UIButton) {
//        TODO: StartRecording
//        cameraController.captureImage {(image, error) in
//            guard let image = image else {
//                print(error ?? "Image capture error")
//                return
//            }
//
//            try? PHPhotoLibrary.shared().performChangesAndWait {
//                PHAssetChangeRequest.creationRequestForAsset(from: image)
//            }
//        }
        configureCameraController()

    }
    
    
    @IBAction func btnStop(_ sender: Any) {
        streamController.stopRecording()
    }
    //     prepares our camera controller like we designed it to
           func configureCameraController() {
               streamController.prepare {(error) in
                   if let error = error {
                       print(error)
                   }
                   
                   try? self.streamController.displayPreview(on: self.capturePreviewView)
               }
           }
           
           func styleCaptureButton() {
               captureButton.layer.borderColor = UIColor.black.cgColor
               captureButton.layer.borderWidth = 2
               
               captureButton.layer.cornerRadius = min(captureButton.frame.width, captureButton.frame.height) / 2
           }
    
}
